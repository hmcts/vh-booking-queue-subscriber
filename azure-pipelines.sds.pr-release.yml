name: $(Date:yyyyMMddHHmm)-$(Rev:r)

resources:
  repositories:
    - repository: azTemplates
      type: github
      name: hmcts/azure-devops-templates
      ref: master
      endpoint: hmcts

trigger: none

pr:
  - master

pool: 
  vmImage: ubuntu-22.04

variables:
  - group: vh-github-app-credentials
  - group: vh-video-web
  - name: run_acceptance_tests
    value: false

stages:
- stage: Pre_Release_Tasks
  displayName: Pre-Release Tasks
  variables:
    - template: variables/shared.yaml
  jobs:
    - job: GitVersion
      displayName: "GitVersion"
      steps:
        - checkout: self
          fetchTags: true
      
        - task: gitversion/setup@3.0.3
          displayName: Install GitVersion
          inputs:
            versionSpec: '5.11.1'

        - task: gitversion/execute@3.0.3
          displayName: Determine Version
          inputs:
            useConfigFile: true
            configFilePath: ${{ variables.git_version_config_path }}

  #####################################################
  # CI Build Checks. ##################################
- stage: CI_Build
  displayName: CI Build
  variables:
  - template: variables/shared.yaml
  jobs:
  - job: CI_Helm
    displayName: "Helm CI"
    steps:
    - checkout: self

    - template: templates\Containerisation\helm\helm-lint.yaml@azTemplates
      parameters:
        chartPath: ${{ variables.chartPath }}
        chartValuesPath: ${{ variables.chartPath }}

  - job: UnitTests
    displayName: "Unit Tests"
    steps:
    - checkout: self

    - template: templates/dotnet/build-test-analyse.yml@azTemplates
      parameters:
        dotnetVersion: ${{ variables.dotnetVersion }}
        nugetConfigPath: nuget.config
        appName: ${{ variables.appName }}
        dockerComposeTestFile: docker-compose.tests.yml
        sonarExtraProperties: |
          sonar.cs.opencover.reportsPaths=$(System.DefaultWorkingDirectory)/coverage.opencover.xml
          sonar.coverage.exclusions="**/BookingQueueSubscriber/Swagger/**, **/Program.cs, **/Startup.cs, **/BookingQueueSubscriber.Common/**, **/BookingQueueSubscriber.Common/**, **/BookingQueueSubscriber.IntegrationTests/**, **/BookingQueueSubscriber.UnitTests/**, **/BookingQueueSubscriber/Helper/**, **/BookingQueueSubscriber/ConfigureServicesExtensions.cs, **/BookingQueueSubscriber/Extensions/**"
          sonar.cpd.exclusions="**/Program.cs, **/Startup.cs, **/BookingQueueSubscriber.Common/**, **/BookingQueueSubscriber/Swagger/**"

#####################################################
# Build Docker Image ################################
- stage: Dock
  displayName: Docker Build & Push Image
  variables:
  - template: variables/dev.yaml
  - template: variables/shared.yaml
    parameters:
      env: ${{ variables.env }}
  - group: vh-github-app-credentials
  jobs:
  - job: Dock
    displayName: "Build and Push Image ${{ variables.git_repo_name }}"
    steps:
    - checkout: self

    - template: templates\Github\get-app-token.yaml@azTemplates
      parameters:
        privateKeyFileName: ${{ variables.gh_app_private_key_file_name }}
        appId: $(gh_app_app_id)

    - template: templates\Github\bump-chart-versions.yaml@azTemplates
      parameters:
        chartName: ${{ variables.chartName }}
        chartPath: $(Build.SourcesDirectory)
        chartBranch: $(System.PullRequest.SourceBranch)
        githubToken: $(githubappinstall.token)
        githubUsername: $(gh_app_name)
        githubEmail: "$(gh_app_app_id)+$(gh_app_name)[bot]@users.noreply.github.com"

    - bash: |
        sed -i "s|</configuration>|<packageSourceCredentials><vh-packages><add key=\"Username\" value=\"PAT\" /><add key=\"ClearTextPassword\" value=\"$(System.AccessToken)\" /></vh-packages></packageSourceCredentials></configuration>|" nuget.config
      displayName: Add NuGet Feed Authentication
      workingDirectory: ${{ variables.app_path }}

    - template: templates\Containerisation\docker\docker-compose.yaml@azTemplates # Temp - Change nuget.config to nuget.config.
      parameters:
        azureSubscription: ${{ variables.acrSubscription }}
        acrName: ${{ variables.acrName }}
        repositoryName: ${{ variables.repositoryName }}

    - template: templates\Containerisation\docker\docker-push-azure.yaml@azTemplates
      parameters:
        azureSubscription: ${{ variables.acrSubscription }}
        acrName: ${{ variables.acrName }}
        repositoryName: ${{ variables.repositoryName }}
        imageName: "${{ replace(variables.git_repo_name, '-', '') }}"
        imageTags:
          - "${{ variables.prTagName }}"

#####################################################
# Deploy Helm Chart to Dev. #########################
- stage: Install
  dependsOn: Dock
  displayName: Deploy Helm Chart Dev AKS
  variables:
  - template: variables/dev.yaml
  - template: variables/shared.yaml
    parameters:
      env: ${{ variables.env }}
  - name: dnsRecordName
    value: vh-${{ variables.git_repo_name }}-${{ variables.prTagPrefix }}
  jobs:
  - job: helm_uninstall
    displayName: Uninstall Helm from Dev
    steps:
    - template: templates\Azure\Aks\get-active-cluster.yaml@azTemplates
      parameters:
        subscriptionName: "${{ variables.subscriptionName }}"
        environment: ${{ variables.env }}

    - template: templates/Containerisation/helm/helm-uninstall.yaml@azTemplates
      parameters:
        namespace: "vh"
        releaseName: "${{ variables.chartName }}-${{ variables.prTagPrefix }}"
        azureSubscription: "${{ variables.subscriptionName }}"
        aksResourceGroupName: "$(aksCluster.resourceGroup)"
        aksClusterName: "$(aksCluster.name)"

  - job: aks_push
    dependsOn: helm_uninstall
    displayName: Deploy To Dev AKS
    steps:
    - template: templates\Azure\Aks\get-active-cluster.yaml@azTemplates
      parameters:
        subscriptionName: "${{ variables.subscriptionName }}"
        environment: ${{ variables.env }}
    - template: templates/Containerisation/helm/helm-install.yaml@azTemplates
      parameters:
        privateKeyFileName: ${{ variables.gh_app_private_key_file_name }}
        appId: $(gh_app_app_id)
        envValuesTemplatePath: ${{ variables.envValuesTemplatePath }}
        envValuesPath: ${{ variables.envValuesPath }}
        acrName: ${{ variables.acrName }}
        repositoryName: ${{ variables.repositoryName }}
        prTagName: ${{ variables.prTagName }}
        releaseName: "${{ variables.chartName }}-${{ variables.prTagPrefix }}"
        dnsRecordName: ${{ variables.dnsRecordName }}
        dnsZone: ${{ variables.dnsZone }}
        env: ${{ variables.env }}
        chartName: ${{ variables.chartName }}
        chartPath: ${{ variables.chartPath }}
        subscriptionName: "${{ variables.subscriptionName }}"
        aksResourceGroupName: "$(aksCluster.resourceGroup)"
        aksClusterName: "$(aksCluster.name)"
        dnsSubscriptionName: "${{ variables.dnsZoneSubscription }}"
        dnsResourceGroupName: "${{ variables.dnsZoneResourceGroup }}"
