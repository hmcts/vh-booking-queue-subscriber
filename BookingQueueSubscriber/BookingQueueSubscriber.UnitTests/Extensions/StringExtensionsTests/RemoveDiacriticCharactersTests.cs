using BookingQueueSubscriber.Common.Extensions;

namespace BookingQueueSubscriber.UnitTests.Extensions.StringExtensionsTests;

public class RemoveDiacriticCharactersTests
{
    [TestCase("Çréâtïvéàççénts", "Creativeaccents")]
    [TestCase("Áá","Aa")]
    [TestCase("Àà","Aa")]
    [TestCase("Ââ","Aa")]
    [TestCase("Ää","Aa")]
    [TestCase("Ãã","Aa")]
    [TestCase("Åå","Aa")]
    [TestCase("Āā","Aa")]
    [TestCase("Ăă","Aa")]
    [TestCase("Ąą","Aa")]
    [TestCase("Ćć","Cc")]
    [TestCase("Čč","Cc")]
    [TestCase("Éé","Ee")]
    [TestCase("Èè","Ee")]
    [TestCase("Êê","Ee")]
    [TestCase("Ëë","Ee")]
    [TestCase("Ēē","Ee")]
    [TestCase("Ęę","Ee")]
    [TestCase("Ěě","Ee")]
    [TestCase("Ğğ","Gg")]
    [TestCase("Ģģ","Gg")]
    [TestCase("Íí","Ii")]
    [TestCase("Ìì","Ii")]
    [TestCase("Îî","Ii")]
    [TestCase("Ïï","Ii")]
    [TestCase("Ĩĩ","Ii")]
    [TestCase("Īī","Ii")]
    [TestCase("İı","Ii")]
    [TestCase("Ķķ","Kk")]
    [TestCase("Ĺĺ","Ll")]
    [TestCase("Ļļ","Ll")]
    [TestCase("Ľľ","Ll")]
    [TestCase("Łł","Ll")]
    [TestCase("Ńń","Nn")]
    [TestCase("Ņņ","Nn")]
    [TestCase("Ňň","Nn")]
    [TestCase("Ññ","Nn")]
    [TestCase("Óó","Oo")]
    [TestCase("Òò","Oo")]
    [TestCase("Ôô","Oo")]
    [TestCase("Öö","Oo")]
    [TestCase("Õõ","Oo")]
    [TestCase("Ōō","Oo")]
    [TestCase("Őő","Oo")]
    [TestCase("Ŕŕ","Rr")]
    [TestCase("Řř","Rr")]
    [TestCase("Śś","Ss")]
    [TestCase("Şş","Ss")]
    [TestCase("Šš","Ss")]
    [TestCase("Ťť","Tt")]
    [TestCase("Úú","Uu")]
    [TestCase("Ùù","Uu")]
    [TestCase("Ûû","Uu")]
    [TestCase("Üü","Uu")]
    [TestCase("Ũũ","Uu")]
    [TestCase("Ūū","Uu")]
    [TestCase("Ůů","Uu")]
    [TestCase("Űű","Uu")]
    [TestCase("Ýý","Yy")]
    [TestCase("Ỳỳ","Yy")]
    [TestCase("Ÿÿ","Yy")]
    [TestCase("Źź","Zz")]
    [TestCase("Żż","Zz")]
    [TestCase("Žž","Zz")]
    public void Should_remove_diacritic_characters(string input, string expected)
    {
        var result = input.RemoveDiacriticCharacters();
        result.Should().Be(expected);
    }
}