//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v12.0.17.0 (NJsonSchema v9.13.26.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

namespace BookingQueueSubscriber.Services.VideoApi.Contracts
{
    #pragma warning disable

    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.26.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ConferenceEventRequest 
    {
        /// <summary>Unique id to represent an event</summary>
        [Newtonsoft.Json.JsonProperty("event_id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Event_id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("event_type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public EventType? Event_type { get; set; }
    
        /// <summary>Timestamp when this event has occured (date time in utc).</summary>
        [Newtonsoft.Json.JsonProperty("time_stamp_utc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? Time_stamp_utc { get; set; }
    
        /// <summary>Id of virtual court room (uuid).</summary>
        [Newtonsoft.Json.JsonProperty("conference_id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Conference_id { get; set; }
    
        /// <summary>Id of participant (uuid).</summary>
        [Newtonsoft.Json.JsonProperty("participant_id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Participant_id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("transfer_from", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public RoomType? Transfer_from { get; set; }
    
        [Newtonsoft.Json.JsonProperty("transfer_to", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public RoomType? Transfer_to { get; set; }
    
        /// <summary>Event reason</summary>
        [Newtonsoft.Json.JsonProperty("reason", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Reason { get; set; }
    
    
    }
    
    /// <summary>Type of an event</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.26.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum EventType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Joined")]
        Joined = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Disconnected")]
        Disconnected = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Transfer")]
        Transfer = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Help")]
        Help = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Pause")]
        Pause = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Close")]
        Close = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Leave")]
        Leave = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Consultation")]
        Consultation = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"JudgeAvailable")]
        JudgeAvailable = 9,
    
    }
    
    /// <summary>Room from where the participant is transferred from.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.26.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum RoomType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"WaitingRoom")]
        WaitingRoom = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"HearingRoom")]
        HearingRoom = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"ConsultationRoom1")]
        ConsultationRoom1 = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"ConsultationRoom2")]
        ConsultationRoom2 = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AdminRoom")]
        AdminRoom = 4,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.26.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ProblemDetails 
    {
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("title", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Title { get; set; }
    
        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("detail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Detail { get; set; }
    
        [Newtonsoft.Json.JsonProperty("instance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Instance { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.26.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BookNewConferenceRequest 
    {
        [Newtonsoft.Json.JsonProperty("hearing_ref_id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Hearing_ref_id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("case_type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Case_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("scheduled_date_time", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? Scheduled_date_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("case_number", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Case_number { get; set; }
    
        [Newtonsoft.Json.JsonProperty("case_name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Case_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("scheduled_duration", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Scheduled_duration { get; set; }
    
        [Newtonsoft.Json.JsonProperty("participants", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.Generic.List<ParticipantRequest> Participants { get; set; } = new System.Collections.Generic.List<ParticipantRequest>();
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.26.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ParticipantRequest 
    {
        [Newtonsoft.Json.JsonProperty("participant_ref_id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Participant_ref_id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        public string Name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("display_name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Display_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("username", Required = Newtonsoft.Json.Required.Always)]
        public string Username { get; set; }
    
        [Newtonsoft.Json.JsonProperty("user_role", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public UserRole? User_role { get; set; }
    
        [Newtonsoft.Json.JsonProperty("case_type_group", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Case_type_group { get; set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.26.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum UserRole
    {
        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CaseAdmin")]
        CaseAdmin = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"VideoHearingsOfficer")]
        VideoHearingsOfficer = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"HearingFacilitationSupport")]
        HearingFacilitationSupport = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Judge")]
        Judge = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Individual")]
        Individual = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Representative")]
        Representative = 6,
    
    }
    
    /// <summary>Detailed information for a conference</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.26.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ConferenceDetailsResponse 
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("scheduled_date_time", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? Scheduled_date_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("case_type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Case_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("case_number", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Case_number { get; set; }
    
        [Newtonsoft.Json.JsonProperty("case_name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Case_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("scheduled_duration", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Scheduled_duration { get; set; }
    
        [Newtonsoft.Json.JsonProperty("current_status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ConferenceState? Current_status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("participants", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ParticipantDetailsResponse> Participants { get; set; }
    
        [Newtonsoft.Json.JsonProperty("meeting_room", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public MeetingRoomResponse Meeting_room { get; set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.26.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum ConferenceState
    {
        [System.Runtime.Serialization.EnumMember(Value = @"NotStarted")]
        NotStarted = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"InSession")]
        InSession = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Paused")]
        Paused = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Suspended")]
        Suspended = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Closed")]
        Closed = 4,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.26.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ParticipantDetailsResponse 
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("display_name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Display_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("username", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Username { get; set; }
    
        [Newtonsoft.Json.JsonProperty("user_role", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public UserRole? User_role { get; set; }
    
        [Newtonsoft.Json.JsonProperty("case_type_group", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Case_type_group { get; set; }
    
        [Newtonsoft.Json.JsonProperty("current_status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ParticipantStatusResponse Current_status { get; set; }
    
    
    }
    
    /// <summary>Represents the meeting room</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.26.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class MeetingRoomResponse 
    {
        /// <summary>The iFrame uri for the video hearings officer</summary>
        [Newtonsoft.Json.JsonProperty("admin_uri", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Admin_uri { get; set; }
    
        /// <summary>The iFrame uri for the judge</summary>
        [Newtonsoft.Json.JsonProperty("judge_uri", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Judge_uri { get; set; }
    
        /// <summary>The meeting uri for participants</summary>
        [Newtonsoft.Json.JsonProperty("participant_uri", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Participant_uri { get; set; }
    
        /// <summary>The Pexip node to connect to</summary>
        [Newtonsoft.Json.JsonProperty("pexip_node", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Pexip_node { get; set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.26.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ParticipantStatusResponse 
    {
        [Newtonsoft.Json.JsonProperty("participant_state", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ParticipantState? Participant_state { get; set; }
    
        [Newtonsoft.Json.JsonProperty("time_stamp", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? Time_stamp { get; set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.26.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum ParticipantState
    {
        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NotSignedIn")]
        NotSignedIn = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"UnableToJoin")]
        UnableToJoin = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Joining")]
        Joining = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Available")]
        Available = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"InHearing")]
        InHearing = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"InConsultation")]
        InConsultation = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Disconnected")]
        Disconnected = 7,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.26.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ConferenceSummaryResponse 
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("scheduled_date_time", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? Scheduled_date_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("case_type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Case_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("case_number", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Case_number { get; set; }
    
        [Newtonsoft.Json.JsonProperty("case_name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Case_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("scheduled_duration", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Scheduled_duration { get; set; }
    
        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ConferenceState? Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("participants", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ParticipantSummaryResponse> Participants { get; set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.26.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ParticipantSummaryResponse 
    {
        /// <summary>The participant username</summary>
        [Newtonsoft.Json.JsonProperty("username", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Username { get; set; }
    
        /// <summary>The participant display name</summary>
        [Newtonsoft.Json.JsonProperty("display_name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Display_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ParticipantState? Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("user_role", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public UserRole? User_role { get; set; }
    
    
    }
    
    /// <summary>Request a private consultation with another participant</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.26.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ConsultationRequest 
    {
        /// <summary>The conference UUID</summary>
        [Newtonsoft.Json.JsonProperty("conference_id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Conference_id { get; set; }
    
        /// <summary>Requestor's UUID</summary>
        [Newtonsoft.Json.JsonProperty("requested_by", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Requested_by { get; set; }
    
        /// <summary>Requestee's UUID</summary>
        [Newtonsoft.Json.JsonProperty("requested_for", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Requested_for { get; set; }
    
        [Newtonsoft.Json.JsonProperty("answer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ConsultationAnswer? Answer { get; set; }
    
    
    }
    
    /// <summary>Response to a consultation request (i.e. 'Accepted or Rejected')</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.26.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum ConsultationAnswer
    {
        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Accepted")]
        Accepted = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Rejected")]
        Rejected = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.26.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AddParticipantsToConferenceRequest 
    {
        [Newtonsoft.Json.JsonProperty("participants", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.Generic.List<ParticipantRequest> Participants { get; set; } = new System.Collections.Generic.List<ParticipantRequest>();
    
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "12.0.17.0 (NJsonSchema v9.13.26.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class VideoApiException : System.Exception
    {
        public int StatusCode { get; private set; }

        public string Response { get; private set; }

        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public VideoApiException(string message, int statusCode, string response, System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Exception innerException) 
            : base(message + "\n\nStatus: " + statusCode + "\nResponse: \n" + response.Substring(0, response.Length >= 512 ? 512 : response.Length), innerException)
        {
            StatusCode = statusCode;
            Response = response; 
            Headers = headers;
        }

        public override string ToString()
        {
            return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "12.0.17.0 (NJsonSchema v9.13.26.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class VideoApiException<TResult> : VideoApiException
    {
        public TResult Result { get; private set; }

        public VideoApiException(string message, int statusCode, string response, System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result, System.Exception innerException) 
            : base(message, statusCode, response, headers, innerException)
        {
            Result = result;
        }
    }

    #pragma warning restore
}