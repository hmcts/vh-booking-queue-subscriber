name: $(Date:yyyyMMddHHmm)-$(Rev:r)

trigger:
  - master

pr: none

resources:
  repositories:
    - repository: azTemplates
      type: github
      name: hmcts/azure-devops-templates
      ref: master
      endpoint: hmcts

parameters:
- name: stages
  type: object
  default:
  - env: 'dev'
    buildPushImage: true
    pushHelmChart: true
  - env: 'demo'
    requireApproval: true
    buildPushImage: true
    pushHelmChart: false
  - env: 'test'
    requireApproval: true
    buildPushImage: true
    pushHelmChart: false

pool: 
  vmImage: ubuntu-22.04

stages:
#####################################################
# CI Build Tasks. ###################################
- stage: CI_Build
  dependsOn: []
  displayName: CI Build
  variables:
  - template: variables/shared.yaml
  jobs:
  - job: CI_Helm
    displayName: "Helm CI"
    steps:
    - checkout: self

    - template: templates\Containerisation\helm\helm-lint.yaml@azTemplates
      parameters:
        chartPath: ${{ variables.chartPath }}
        chartValuesPath: ${{ variables.chartPath }}

  - job: UnitTests
    displayName: "Unit Tests"
    steps:
    - checkout: self

    - template: templates/sonarCloud/prepare.yml@azTemplates
      parameters:
        ExtraProperties: |
          sonar.cs.opencover.reportsPaths=$(System.DefaultWorkingDirectory)/Coverage/coverage.opencover.xml
          sonar.coverage.exclusions="**/BookingQueueSubscriber/Swagger/**, **/Program.cs, **/Startup.cs, **/BookingQueueSubscriber.Common/**, **/BookingQueueSubscriber.Common/**, **/BookingQueueSubscriber.IntegrationTests/**, **/BookingQueueSubscriber.UnitTests/**, **/BookingQueueSubscriber/Helper/**, **/BookingQueueSubscriber/ConfigureServicesExtensions.cs, **/BookingQueueSubscriber/Extensions/**"
          sonar.cpd.exclusions="**/Program.cs, **/Startup.cs, **/BookingQueueSubscriber.Common/**, **/BookingQueueSubscriber/Swagger/**"

    - template: stages\dotnet-tests\unit-tests.yml@azTemplates
      parameters:
        #vstsFeedId: 'Video Hearings/vh-packages'
        nugetConfigPath: ${{ variables.app_path }}
        unitTestProjectPath: "${{ variables.app_path }}/${{ variables.app_path }}.UnitTests"
        dotNetCoreVersion: 6.x
        coverletCoverageExclusions:
          - "[${{ variables.app_path }}.*Tests?]*"
          - "[${{ variables.app_path }}]Startup"
          - "[*]${{ variables.app_path }}.Common.*"
          - "[Testing.Common]*"

    - template: templates/sonarCloud/runAnalysis.yml@azTemplates

#####################################################
# Manual Approval ###################################
- ${{ each stage in parameters.stages }}:
  - stage: Manual_Approval_${{ stage.env }}
    displayName: Approval ${{ stage.env }}
    condition: eq('${{ stage.requireApproval }}', true)
    jobs:
      - job: Approve
        displayName: 'Approve to ${{ stage.env }}'
        pool: server
        timeoutInMinutes: 10080 # 7 Days
        steps:
          - task: ManualValidation@0
            timeoutInMinutes: 10080 # 7 Days
            inputs:
              instructions: 'Please Approve run to ${{ stage.env }}'
              onTimeout: 'reject'

#####################################################
# Build Docker Image & Push. ########################
  - ${{ if eq(stage.buildPushImage, true)  }}:
    - stage: Docker_Build_Push_${{ stage.env }}
      displayName: Build & Push ${{ stage.env }}
      dependsOn:
      - ${{ if stage.requireApproval }}:
        - Manual_Approval_${{ stage.env }}
      variables:
        - template: variables/${{ stage.env }}.yaml
        - template: variables/shared.yaml
      jobs:
      - job: Docker_Build_${{ stage.env }}
        displayName: Docker Build and Push ${{ stage.env }}
        steps:
        - checkout: self

        - bash: |
            sed -i "s|</configuration>|<packageSourceCredentials><vh-packages><add key=\"Username\" value=\"PAT\" /><add key=\"ClearTextPassword\" value=\"$(System.AccessToken)\" /></vh-packages></packageSourceCredentials></configuration>|" nuget.config
          displayName: Add NuGet Feed Authentication
          workingDirectory: $(app_path)
      
        - template: templates\Containerisation\docker\docker-compose.yaml@azTemplates
          parameters:
            azureSubscription: ${{ variables.acrSubscription }}
            acrName: ${{ variables.acrName }}
            repositoryName:  ${{ variables.repositoryName }}
          
        - template: templates\Containerisation\docker\docker-push-azure.yaml@azTemplates
          parameters:
            azureSubscription: ${{ variables.acrSubscription }}
            acrName: ${{ variables.acrName }}
            repositoryName:  ${{ variables.repositoryName }}
            imageName: "${{ variables.imageName }}"
            imageTags:
              - '${{ variables.imageTagName }}'

  #########################################
  # Push Helm Charts to Repo. #############
  - ${{ if eq(stage.pushHelmChart, true) }}:
    - stage: Helm_${{ stage.env }}
      displayName: Push Helm Charts ${{ stage.env }}
      dependsOn: Docker_Build_Push_${{ stage.env }}
      variables:
      - template: variables/dev.yaml
      - template: variables/shared.yaml
      - group: vh-github-app-credentials
      jobs:
      - job: Helm_${{ stage.env }}
        displayName: Helm Push ${{ stage.env }}
        steps:
        - checkout: self

        - template: templates\Github\get-app-token.yaml@azTemplates
          parameters:
            privateKeyFileName: ${{ variables.gh_app_private_key_file_name }}
            appId: $(gh_app_app_id)

        - template: templates\Github\push-to-helm-chart-repo.yaml@azTemplates
          parameters:
            chartName: ${{ variables.chartName }}
            chartPath: ${{ variables.chartPath }}
            githubToken: $(githubappinstall.token)
            githubUsername: $(gh_app_name)
            githubEmail: "$(gh_app_app_id)+$(gh_app_name)[bot]@users.noreply.github.com"
            subDirectory: ${{ variables.subDirectory }}